{"version":3,"sources":["Movie.js","actions.js","Review.js","MoviePage.js","Search.js","App.js","reportWebVitals.js","reducer.js","store.js","index.js"],"names":["Movie","props","movie","poster_path","className","src","alt","original_title","vote_average","API_KEY","Action","Object","freeze","LoadReviews","LoadTrending","LoadLatest","LoadTopRated","LoadSearch","FinishAddingReview","startLoadingReviews","url","options","method","dispatch","fetch","then","checkForErrors","response","json","data","ok","finishAddingReview","reviews","catch","e","console","error","search","keyword","log","type","payload","loadSearchAction","results","loadTrending","trendings","loadLatest","latests","loadTopRated","rated","review","Error","status","statusText","Review","username","rating","message","MoviePage","rev","useSelector","state","seperate","undefined","useDispatch","onSearch","document","getElementById","value","JSON","parse","localStorage","getItem","setItem","stringify","title","useEffect","Fragment","href","action","id","placeholder","name","to","onClick","release_date","overview","htmlFor","min","max","rate","mess","movie_name","headers","body","startAddingReview","map","Search","searc","Loading","load","Spinner","animation","role","App","movies","s","loadingTop","loadingTrending","loadingUpcoming","exact","path","children","match","params","find","m","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","isWaiting","loadingSearch","loadingReviews","reducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.52303c7a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport function Movie(props) {\r\n    const movie = props.movie;\r\n    const baseURL = \"https://image.tmdb.org/t/p/original\";\r\n    const unavailable = \"https://d32qys9a6wm9no.cloudfront.net/images/movies/poster/500x735.png\";\r\n    if(movie.poster_path) {\r\n        return (\r\n            <div className=\"movie\">\r\n                <img src={baseURL + movie.poster_path} alt={movie.original_title}></img>\r\n                <p className=\"title\">{movie.original_title}</p>\r\n                <p className=\"vote\"><strong>{movie.vote_average}</strong></p>\r\n            </div> \r\n        );\r\n\r\n    } else {\r\n        return (\r\n            <div className=\"movie\">\r\n                <img src={unavailable} alt={movie.original_title}></img>\r\n                <p className=\"title\">{movie.original_title}</p>\r\n                <p className=\"vote\"><strong>{movie.vote_average}</strong></p>\r\n            </div> \r\n        );\r\n    }\r\n}","const API_KEY = '32a683d6e47d7bf3d66fbb4c7b83c854';\r\n\r\nexport const Action = Object.freeze({\r\n    LoadReviews: 'LoadReviews',\r\n    LoadTrending: 'LoadTrending',\r\n    LoadLatest: 'LoadLatest',\r\n    LoadTopRated: 'LoadTopRated',\r\n    LoadSearch: 'LoadSearch',\r\n    FinishAddingReview: 'FinishAddingReview',\r\n});\r\n\r\nexport function loadReviews(reviews){\r\n    return{\r\n        type: Action.LoadReviews,\r\n        payload: reviews,\r\n    };\r\n}\r\n\r\nexport function startLoadingReviews(movie){\r\n    const url = `https://express-backend.347kush.me:8442/reviews/${movie}`;\r\n\r\n    const options = {\r\n        method: 'GET',\r\n    };\r\n\r\n    return dispatch => {\r\n        fetch(url, options)\r\n        .then(checkForErrors)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.ok){\r\n                dispatch(finishAddingReview(data.reviews));\r\n            }\r\n        })\r\n        .catch(e => console.error(e));\r\n    };\r\n}\r\n\r\nexport function search(keyword) {\r\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${keyword}&page=1`;\r\n    return dispatch => {\r\n        fetch(url, {\r\n            \"content-type\": 'application/json',\r\n        })\r\n        .then(checkForErrors)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            dispatch(loadSearchAction(data.results));\r\n        })\r\n        .catch(e => console.error(e));\r\n    };\r\n}\r\n\r\nfunction loadSearchAction(search) {\r\n    return{\r\n        type: Action.LoadSearch,\r\n        payload: search,\r\n    };\r\n}\r\n\r\nexport function loadTrending() {\r\n    const url = `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n    return dispatch => {\r\n        fetch(url, {\r\n            \"content-type\": 'application/json',\r\n        })\r\n        .then(checkForErrors)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            dispatch(loadTrendingAction(data.results));\r\n        })\r\n        .catch(e => console.error(e));\r\n    };\r\n}\r\n\r\nexport function loadTrendingAction(trendings){\r\n    return{\r\n        type: Action.LoadTrending,\r\n        payload: trendings,\r\n    };\r\n}\r\n\r\nexport function loadLatest() {\r\n    const url = `https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}&language=en-US&page=1`;\r\n    return dispatch => {\r\n        fetch(url, {\r\n            \"content-type\": 'application/json',\r\n        })\r\n        .then(checkForErrors)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            dispatch(loadLatestAction(data.results));\r\n        })\r\n        .catch(e => console.error(e));\r\n    };\r\n}\r\n\r\nexport function loadLatestAction(latests){\r\n    return{\r\n        type: Action.LoadLatest,\r\n        payload: latests,\r\n    };\r\n}\r\n\r\nexport function loadTopRated() {\r\n    const url = `https://api.themoviedb.org/3/movie/top_rated?api_key=${API_KEY}&language=en-US&page=1`;\r\n    return dispatch => {\r\n        fetch(url, {\r\n            \"content-type\": 'application/json',\r\n        })\r\n        .then(checkForErrors)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            dispatch(loadTopRatedAction(data.results));\r\n        })\r\n        .catch(e => console.error(e));\r\n    };\r\n}\r\n\r\nexport function loadTopRatedAction(rated){\r\n    return{\r\n        type: Action.LoadTopRated,\r\n        payload: rated,\r\n    };\r\n}\r\n\r\nexport function startAddingReview(name, movie, rate, mess){\r\n    const review = {\r\n        username: name, movie_name: movie, rating: rate, message: mess,\r\n    };\r\n\r\n    console.log(JSON.stringify(review));\r\n\r\n    const options = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(review)\r\n    };\r\n\r\n    return dispatch => {\r\n        fetch(`https://express-backend.347kush.me:8442/reviews/`, options)\r\n        .then(checkForErrors)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.ok){\r\n                dispatch(finishAddingReview(review));\r\n            }\r\n        })\r\n        .catch(e => console.error(e));\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function finishAddingReview(review){\r\n    return {\r\n        type: Action.FinishAddingReview,\r\n        payload: review,\r\n    };\r\n}\r\n\r\nfunction checkForErrors(response){\r\n    if(!response.ok){\r\n        throw Error(`${response.status}: ${response.statusText}`);\r\n    }\r\n    return response;\r\n}","import React from 'react';\r\n\r\nexport function Review(props){\r\n    const review = props.review;\r\n\r\n    return (\r\n        <div className=\"review-item\">\r\n            <div className=\"review-left\">\r\n                <div className=\"review-name\">Name: {review.username}</div>\r\n\r\n                <div className=\"review-rating\">Rating: {review.rating}</div>\r\n            </div>\r\n            <div className=\"review-right\">\r\n                <div className=\"review-message\">{review.message}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, {useEffect} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {search, startAddingReview, startLoadingReviews} from './actions';\r\nimport {Link} from 'react-router-dom';\r\nimport {Review} from './Review';\r\n\r\nexport function MoviePage(props) {\r\n    var movie = props.movie;\r\n    const rev = useSelector(state => state.reviews);\r\n    console.log(rev);\r\n    var seperate = [];\r\n    if(rev[0] !== undefined)\r\n        seperate = rev[0];\r\n    const dispatch = useDispatch();\r\n    const onSearch = () => {\r\n        dispatch(search(document.getElementById('textbox').value));\r\n      }\r\n\r\n    const addReview = () => {\r\n        dispatch(startAddingReview(document.getElementById('name').value, movie.original_title, document.getElementById('rating').value, document.getElementById('message').value));\r\n        dispatch(startLoadingReviews(movie.original_title));\r\n    }\r\n    if(movie === undefined) {\r\n        movie = JSON.parse(localStorage.getItem(\"movie\"));\r\n    } else {\r\n        localStorage.setItem(\"movie\", JSON.stringify(movie));\r\n    }\r\n\r\n    const title = movie.original_title;\r\n\r\n    useEffect(() => {\r\n        dispatch(startLoadingReviews(title));\r\n    }, [dispatch, title]);\r\n\r\n    const baseURL = \"https://image.tmdb.org/t/p/original\";\r\n    const unavailable = \"https://d32qys9a6wm9no.cloudfront.net/images/movies/poster/500x735.png\";\r\n    if(movie.poster_path) {\r\n        return (\r\n            <React.Fragment>\r\n\r\n            <div className=\"top\">\r\n            <a href=\"/\"><img src='https://fontmeme.com/permalink/201213/ed9fb521c5ce730fca51654044a68288.png' alt=\"Movies2Watch\"></img></a>\r\n                <div className=\"searchbar\">\r\n                <form action=\"/action_page.php\">\r\n                    <input type=\"text\" id=\"textbox\" placeholder=\"Search...\" name=\"search\"></input>\r\n                    <Link to={`/search/`}><input type=\"image\" alt=\"search\" id=\"search-button\" onClick={onSearch} src={process.env.PUBLIC_URL + '/search.png'} /></Link>\r\n                </form>\r\n                </div>\r\n            </div>\r\n            <div className=\"body\" id=\"movie-body\">\r\n                <div className=\"inner-body\">\r\n                    <h1 className=\"movie_title\">{title}</h1>\r\n                    <div className=\"movie-container\">  \r\n                        <div className=\"movie-info\">\r\n                            <div className=\"left-info\">\r\n                                <img className=\"movie_image\" alt={movie.original_title} src={baseURL + movie.poster_path}></img>\r\n                                <p className=\"movie_date\">Release Date: {movie.release_date}</p>\r\n                                <p className=\"movie_date\">Average User Rating: {movie.vote_average}</p>\r\n                            </div>\r\n                            <div className=\"right-info\">\r\n                            <p className=\"movie_description\"><strong>{movie.overview}</strong></p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"reviews\">\r\n                        <h1>User Reviews</h1>\r\n                        <div className=\"review-list\">\r\n                            <form id=\"add-review\">\r\n                                <label htmlFor=\"name\">Name:</label>\r\n                                <input type=\"text\" id=\"name\" name=\"name\"></input>\r\n                                <label htmlFor=\"rating\">Rating (0-10):</label>\r\n                                <input type=\"number\" id=\"rating\" name=\"rating\" min=\"0\" max=\"10\"></input>\r\n                                <label htmlFor=\"message\">Message</label>\r\n                                <textarea id=\"message\" name=\"message\" placeholder=\"Type your review..\"></textarea>\r\n                                <button type=\"button\" onClick={addReview}>Create Review</button>\r\n                            </form>\r\n                            {seperate.map(review =><Review key={review.id} review={review}/>) }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n            <footer>\r\n                <p>Made using <a href=\"https://developers.themoviedb.org/3/getting-started/introduction\">The Movie Database</a></p>\r\n                <p>Developed by Kyle Vinsand and Kushal Gupta</p>\r\n        </footer>\r\n            </React.Fragment>\r\n        )\r\n    } else {\r\n        return(\r\n             <React.Fragment>\r\n\r\n             <div className=\"top\">\r\n             <a href=\"/\"><img src='https://fontmeme.com/permalink/201213/ed9fb521c5ce730fca51654044a68288.png' alt=\"Movies2Watch\"></img></a>\r\n                 <div className=\"searchbar\">\r\n                 <form action=\"/action_page.php\">\r\n                     <input type=\"text\" id=\"textbox\" placeholder=\"Search...\" name=\"search\"></input>\r\n                     <Link to={`/search/`}><input type=\"image\" alt=\"search\" id=\"search-button\" onClick={onSearch} src={process.env.PUBLIC_URL + '/search.png'} /></Link>\r\n                 </form>\r\n                 </div>\r\n             </div>\r\n             <div className=\"body\" id=\"movie-body\">\r\n                 <div className=\"inner-body\">\r\n                     <h1 className=\"movie_title\">{title}</h1>\r\n                     <div className=\"movie-container\">  \r\n                         <div className=\"movie-info\">\r\n                             <div className=\"left-info\">\r\n                                 <img className=\"movie_image\" alt={movie.original_title} src={unavailable}></img>\r\n                                 <p className=\"movie_date\">Release Date: {movie.release_date}</p>\r\n                                 <p className=\"movie_date\">Average User Rating: {movie.vote_average}</p>\r\n                             </div>\r\n                             <div className=\"right-info\">\r\n                             <p className=\"movie_description\"><strong>{movie.overview}</strong></p>\r\n                         </div>\r\n                     </div>\r\n                     <div className=\"reviews\">\r\n                         <h1>User Reviews</h1>\r\n                         <div className=\"review-list\">\r\n                             <form id=\"add-review\">\r\n                                 <label htmlFor=\"name\">Name:</label>\r\n                                 <input type=\"text\" id=\"name\" name=\"name\"></input>\r\n                                 <label htmlFor=\"rating\">Rating (0-10):</label>\r\n                                 <input type=\"number\" id=\"rating\" name=\"rating\" min=\"0\" max=\"10\"></input>\r\n                                 <label htmlFor=\"message\">Message</label>\r\n                                 <textarea id=\"messageUn\" name=\"message\" placeholder=\"Type your review..\"></textarea>\r\n                                 <button type=\"button\">Create Review</button>\r\n                             </form>\r\n                             {seperate.map(review =><Review key={review.id} review={review}/>) }\r\n                         </div>\r\n                     </div>\r\n                 </div>\r\n             </div>\r\n         </div>\r\n             <footer>\r\n                 <p>Made using <a href=\"https://developers.themoviedb.org/3/getting-started/introduction\">The Movie Database</a></p>\r\n                 <p>Developed by Kyle Vinsand and Kushal Gupta</p>\r\n         </footer>\r\n             </React.Fragment>\r\n        )\r\n    }\r\n}","import  React from 'react';\r\nimport './Search.css';\r\nimport {useDispatch} from 'react-redux';\r\nimport {search} from './actions';\r\nimport {Link} from 'react-router-dom';\r\nimport {Movie} from './Movie';\r\n\r\n\r\nexport function Search(props) {\r\n    const dispatch = useDispatch();\r\n    var searc = props.search;\r\n    const onSearch = () => {\r\n        dispatch(search(document.getElementById('textbox').value));\r\n      }\r\n      if(searc === undefined) {\r\n        searc = JSON.parse(localStorage.getItem(\"search\"));\r\n    } else {\r\n        localStorage.setItem(\"search\", JSON.stringify(searc));\r\n    }\r\n    return (\r\n        <div className=\"searchResults\">\r\n            <div className=\"top\">\r\n                <a href=\"/\"><img src='https://fontmeme.com/permalink/201213/ed9fb521c5ce730fca51654044a68288.png' alt=\"Movies2Watch\"></img></a>\r\n                <div className=\"searchbar\">\r\n                    <form action=\"/search\">\r\n                        <input type=\"text\" id='textbox' placeholder=\"Search...\" name=\"search\"></input>\r\n                        <Link to={`/search/`}><input type=\"image\" alt=\"search\" id=\"search-button\" onClick={onSearch} src={process.env.PUBLIC_URL + '/search.png'} /></Link>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div className=\"body\">\r\n                <h1 id=\"search-title\">Search Results</h1>\r\n                <div className=\"search-list\">\r\n                {searc.map(movie => <Link to={`/search/${movie.original_title}`}><Movie key={movie.id} movie={movie} /></Link>)}\r\n                </div>\r\n            </div>\r\n            <footer id=\"search-footer\">\r\n                <p>Made using <a href=\"https://developers.themoviedb.org/3/getting-started/introduction\">The Movie Database</a></p>\r\n                <p>Developed by Kyle Vinsand and Kushal Gupta</p>\r\n            </footer>\r\n        </div>\r\n    );\r\n}","import React, {useEffect} from 'react';\nimport './App.css';\nimport {Movie} from './Movie';\nimport {MoviePage} from './MoviePage';\nimport {Search} from './Search';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {loadLatest, loadTrending, loadTopRated, search} from './actions';\nimport {Link, Switch, Route, Redirect} from 'react-router-dom';\nimport Spinner from 'react-bootstrap/Spinner'\n\nfunction Loading(props) {\n  \n  if(props.load){\n    return (<Spinner className=\"loadingspin\" animation=\"border\" role=\"status\">\n    <span className=\"sr-only\">Loading...</span>\n  </Spinner>\n    );\n  } else {\n    return null;\n  }\n}\n\nfunction App() {\n  const movies = useSelector(state => state.trendings);\n  const latests = useSelector(state => state.latests);\n  const rated = useSelector(state => state.rated);\n  const s = useSelector(state => state.search);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadTrending());\n    dispatch(loadLatest());\n    dispatch(loadTopRated());\n  }, [dispatch]);\n  const onSearch = () => {\n    dispatch(search(document.getElementById('textbox').value));\n  }\n  const loadingTop = useSelector(state => state.loadingTop);\n  const loadingTrending = useSelector(state => state.loadingTrending);\n  const loadingUpcoming = useSelector(state => state.loadingUpcoming);\n  return (\n    \n    <div className=\"App\">\n      <Switch>\n      <Route exact path=\"/search\">\n        <Search search = {s}/>\n      </Route>\n      <Route exact path=\"/trending/:title\" children={props => {\n        const title = props.match.params.title;\n        const movie = movies.find(m => m.original_title === title);\n        return <MoviePage movie={movie} />;\n      }} />\n      <Route exact path=\"/toprated/:title\" children={props => {\n        const title = props.match.params.title;\n        const movie = rated.find(m => m.original_title === title);\n        return <MoviePage movie={movie} />;\n      }} />\n      <Route exact path=\"/upcoming/:title\" children={props => {\n        const title = props.match.params.title;\n        const movie = latests.find(m => m.original_title === title);\n        return <MoviePage movie={movie} />;\n      }} />\n      <Route exact path=\"/search/:title\" children={props => {\n        const title = props.match.params.title;\n        const movie = s.find(m=> m.original_title === title);\n        return <MoviePage movie={movie} />;\n      }} />\n      <Route to=\"\" >\n\n\n\n      <div className=\"top\">\n        <img src='https://fontmeme.com/permalink/201213/ed9fb521c5ce730fca51654044a68288.png' alt=\"Movies2Watch\"></img>\n        <div className=\"searchbar\">\n          <form action=\"/search\">\n            <input type=\"text\" id=\"textbox\" placeholder=\"Search...\" name=\"search\"></input>\n            <Link to={`/search/`}><input type=\"image\" alt=\"Picture of movie poster\" id=\"search-button\" onClick={onSearch} src={process.env.PUBLIC_URL + '/search.png'} /></Link>\n          </form>\n        </div>\n      </div>\n      <div className=\"body\">\n\n        <div className=\"movies-display\">\n          <h2>Trending</h2>\n          <Loading load={loadingTrending} />\n          <div className=\"movie-list\">\n            {movies.map(movie => <Link to={`/trending/${movie.original_title}`}><Movie key={movie.id} movie={movie} /></Link>)}\n          </div>\n        </div>\n        <div className=\"movies-display\">\n          <h2>Top Rated</h2>\n          <Loading load={loadingTop} />\n          <div className=\"movie-list\">\n          {rated.map(movie => <Link to={`/toprated/${movie.original_title}`}><Movie key={movie.id} movie={movie} /></Link>)}\n          </div>\n        </div>\n        <div className=\"movies-display\">\n          <h2>Upcoming</h2>\n          <Loading load={loadingUpcoming} />\n          <div className=\"movie-list\">\n          {latests.map(movie => <Link to={`/upcoming/${movie.original_title}`}><Movie key={movie.id} movie={movie} /></Link>)}          \n          </div>\n        </div>\n      </div>\n      <footer>\n        <p>Made using <a href=\"https://developers.themoviedb.org/3/getting-started/introduction\">The Movie Database</a></p>\n        <p>Developed by Kyle Vinsand and Kushal Gupta</p>\n      </footer>\n        </Route>\n        <Redirect to=\"\" />\n    </Switch>\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {Action} from './actions';\r\n\r\nconst initialState = {\r\n    isWaiting: false,\r\n    reviews: [],\r\n    trendings: [],\r\n    latests: [],\r\n    rated: [],\r\n    search: [],\r\n    loadingTop: true,\r\n    loadingTrending: true,\r\n    loadingUpcoming: true,\r\n    loadingSearch: true,\r\n    loadingReviews: true,\r\n};\r\n\r\nfunction reducer(state = initialState, action){\r\n    switch(action.type){\r\n        case Action.LoadReviews:\r\n            return {\r\n                ...state,\r\n                reviews: action.payload,\r\n                loadingReviews: false,\r\n            }\r\n        case Action.LoadTrending:\r\n            return {\r\n                ...state,\r\n                trendings: action.payload,\r\n                loadingTrending: false,\r\n            }\r\n        case Action.LoadLatest:\r\n            return{\r\n                ...state,\r\n                latests: action.payload,\r\n                loadingUpcoming: false,\r\n            }\r\n\r\n        case Action.LoadTopRated:\r\n            return {\r\n                ...state,\r\n                rated: action.payload,\r\n                loadingTop:false,\r\n            }   \r\n            \r\n        case Action.LoadSearch:\r\n            return {\r\n                ...state,\r\n                search: action.payload,\r\n                loadingSearch: false,\r\n            }\r\n\r\n        case Action.FinishAddingReview:\r\n            console.log(state.reviews);\r\n            return {\r\n                ...state,\r\n                reviews: [action.payload, ...state.reviews],\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport {BrowserRouter} from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}